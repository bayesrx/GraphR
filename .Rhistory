270 + atan(-x/y)*(180/pi)),
hjust = ifelse(x > 0, 0 ,1)),
size=2.5, alpha=10, fontface = "bold")+
expand_limits(x = c(-1.5, 1.5), y = c(-1.5, 1.5))+
guides(size = guide_legend(order = 1))+
#edge_width = guide_legend(order = 2),
#edge_color = guide_legend(order = 3)) +
theme(
#legend.title = element_text(size=4,face = "bold"),
legend.title=element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.box="vertical",
legend.margin = margin(0, 0, -0.5, -0.5),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
p3
pdf(file = "location_c2.pdf",   # The directory you want to save the file in
width = 2.5, # The width of the plot in inches
height = 2.5) # The height of the plot in inches
p3
dev.off()
######
##### network
cluster3 <- mutate(c3_sele,
name_max = origin[c3_sele$ind_max],
name_min = origin[c3_sele$ind_min])
# create a vertices data.frame. One line per object of our hierarchy
cluster3 <- cluster3[,c("name_max","name_min","cor_max")]
colnames(cluster3) <- c("from","to","c3_cor")
cluster3 <- filter(cluster3, c3_cor != 0)
###### recalculate the summation
tmp1 <- cluster3 %>% group_by(from) %>%
summarise(sum_from = sum(abs(c3_cor)))
tmp2 <- cluster3 %>% group_by(to) %>%
summarise(sum_to = sum(abs(c3_cor)))
colnames(tmp1)[1] = colnames(tmp2)[1] <- "name"
summation_c3 <- full_join(tmp1, tmp2)
summation_c3[is.na(summation_c3)] <- 0
summation_c3 <- mutate(summation_c3, summation = sum_from+sum_to) %>%
select(name, summation)
####### vertices
gn_c3 <- unique(c(cluster3$from,
cluster3$to))
vertices_c3  <-  data.frame(
name = gn_c3 ,
id = 1:length(gn_c3)
)
######## merge vertices and summation
vertices_c3 <- full_join(vertices_c3, summation_c3)
vertices_c3 <- mutate(vertices_c3, type = "c3")
######### graph
g <- graph_from_data_frame(cluster3, directed=FALSE, vertices=vertices_c3)
node_range_c3 = c(min(vertices_c3$summation),
max(vertices_c3$summation))
edge_abs_range_c3 = c(min(abs(cluster3$c3_cor)),
max(abs(cluster3$c3_cor)))
node_size_c3 <- vertices_c3$summation
p3 <- ggraph(g, layout = "circle") +
#geom_edge_link() +
geom_edge_arc(aes(color = factor(sign(c3_cor),
levels = c(1,-1)),
width = abs(c3_cor)),
strength = 0.2,
alpha = 0.8)+
scale_edge_width(name = "Magnitude",
breaks = c(0.2,0.4,0.6,0.8),
range = 2.5*edge_abs_range_c3)+
scale_edge_color_discrete(name = "Sign", labels = c("Positive", "Negative")) +
#geom_edge_link(aes(edge_width = width,color = as.factor(sign)))+
geom_node_point(aes(size=node_size_c3),color = "darkgrey") +
scale_size(name = "Sum of Magnitudes",
breaks = c(0.5,1,1.5,2),
range = 3.5*node_range_c3) +
theme_void() +
#guides(size = "none")+
#theme(legend.position = "none") +
#ggtitle("c3-like") +
#theme(plot.title = element_text(face = "bold",size = 25,hjust = 0.5)) +
coord_fixed() +
geom_node_text(aes(label=name,
x = x * 1.05, y = y* 1.05,
angle = ifelse(atan(-(x/y))*(180/pi) < 0,
90 + atan(-(x/y))*(180/pi),
270 + atan(-x/y)*(180/pi)),
hjust = ifelse(x > 0, 0 ,1)),
size=2.5, alpha=10, fontface = "bold")+
expand_limits(x = c(-1.5, 1.5), y = c(-1.5, 1.5))+
guides(size = guide_legend(order = 1))+
#edge_width = guide_legend(order = 2),
#edge_color = guide_legend(order = 3)) +
theme(
#legend.title = element_text(size=4,face = "bold"),
legend.title=element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.box="vertical",
legend.margin = margin(0, 0, -0.5, -0.5),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
p3
pdf(file = "location_c3.pdf",   # The directory you want to save the file in
width = 2.5, # The width of the plot in inches
height = 2.5) # The height of the plot in inches
p3
dev.off()
View(summation_c1)
View(summation_c2)
View(summation_c3)
View(summation_c1)
View(summation_c2)
View(summation_c3)
View(vertices_c1)
View(vertices_c2)
View(vertices_c3)
sin(0)
library(Rcpp)
library(devtools)
compileAttributes()
install()
library(graphR)
?graphR_est
document()
?graphR_est
document()
?graphR_est
document()
?graphR_est
document()
?graphR_est
document()
?graphR_est
document()
?graphR_est
document()
document()
?graphR_est
document()
?graphR_est
document()
?graphR_est
library(dplyr)
?filter
?dplyr::filter
document()
?graphR_est
document()
?graphR_est
?predict
document()
?predict
?graphR_est
?graphR_pred
library(Rcpp)
library(devtools)
compileAttributes()
install()
library(graphR)
?graphR_est
install()
library(Rcpp)
library(devtools)
install()
library(graphR)
document()
library(graphR)
GraphR_est()
library(devtools)
library(Rcpp)
compileAttributes()
install()
library(Rcpp)
library(GraphR)
document
?GraphR_est
?GraphR_pred
library(GraphR)
setwd("C:/Users/chenliy/Desktop/PhD/porject I code/application1_brca/res/pan_gyaen/clean code")
set.seed(20220521)
library(Matrix)
library(MASS)
library(matrixcalc)
library(dplyr)
library(car)
library(reshape2)
library(dplyr)
library(ComplexHeatmap)
library(circlize)
library(igraph)
library(ggraph)
library(graphlayouts)
library(RColorBrewer)
library("viridis")
library(wesanderson)
#install.packages("ggsci")
library(ggsci)
library(readxl)
data <- read.csv("data/pan_gy.csv")
###############
features <- data[,c(6:194)] %>% as.matrix()
features <- apply(features,2,scale)
ex <- data[,c(2:5)] %>% as.matrix()
#ex <- apply(ex,2,scale)
View(ex)
remove(data)
data <- read.csv("data/pan_gy.csv")
###############
gene_expr <- data[,c(6:194)] %>% as.matrix()
external <- data[,c(2:5)] %>% as.matrix()
#ex <- apply(ex,2,scale)
remove(data)
View(gene_expr)
save.image("C:/Users/chenliy/Desktop/PhD/porject I code/application1_brca/res/pan_gyaen/clean code/pan_gyane.RData")
setwd("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/GraphR/R")
load("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/GraphR/pan_gyane.RData")
library(GraphR)
?GraphR_est
est_res <- GraphR_est(
gene_expr,
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
)
library(Rcpp)
library(devtools)
compileAttributes()
setwd("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/GraphR")
compileAttributes()
install()
detach(GraphR)
detach("pkg:GraphR")
detach("package:GraphR", unload=TRUE)
library(devtools)
library(Rcpp)
compileAttributes()
install()
set.seed(1)
library(GraphR)
library(ghyp)
library(dplyr)
library(reshape2)
load("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/example/pan_gyane.RData")
gene_expr <- apply(gene_expr,2,scale)
res <- GraphR_est(
gene_expr,
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
)
new_df <- diag(4)
colnames(new_df) <- colnames(external)
pred <- GraphR_pred(new_df, res)
View(pred)
View(external)
View(gene_expr)
saveRDS(res, "pan_gyane_res.rds")
document()
?GraphR_pred
?GraphR_est
document()
structure(gene_expr)
str(gene_expr)
table(gene_expr)
typeof(gene_expr)
class(gene_expr)
external[c(1:10),]
?predict
load("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/GraphR/data/pan_gyane.RData")
pan_gyane <- list(external = external,
gene_expr = gene_expr)
save(pan_gyane,file="data/pan_gyane.rda")
data <- read.csv("C:/Users/chenliy/Desktop/PhD/porject I code/application1_brca/res/si/cleandata/data/brca_agesi.csv")
View(data)
external <- data[,c("mRNAsi","mDNAsi","age")]
gene_expr <- data[,c(6:196)]
gene_expr <- data[,c(7:196)]
si
si <- list(external = external,
gene_expr = gene_expr)
save(si,file="data/si.rda")
data <- read.csv("C:/Users/chenliy/Desktop/PhD/porject I code/application1_brca/res/subtype/clean data/data/brca_subtype.csv")
View(data)
external <- data[,c("basal","her2","lum")]
colnames(external) <- c("Basal_like","Her2_enriched","Luminal_ab")
gene_expr <- data[,c(4:193)]
pam <- list(external = external,
gene_expr = gene_expr)
save(pam,file="data/pam.rda")
name <- read.csv("C:/Users/chenliy/Desktop/PhD/porject I code/application2_spatial/ST_breast_cancer_data/Gene_expression_BC_BGR_VB.csv")
data <- readRDS("C:/Users/chenliy/Desktop/PhD/porject I code/application2_spatial/ST_breast_cancer_data/BC_u.rds")
coord <- read.csv("C:/Users/chenliy/Desktop/PhD/porject I code/application2_spatial/ST_breast_cancer_data/location_unscaled_BC.csv")
coord <- coord %>%
as.data.frame() %>%
mutate(x_scale = as.vector(scale(x)),
y_scale = as.vector(scale(y)))
library(Matrix)
library(MASS)
library(matrixcalc)
library(dplyr)
library(car)
library(reshape2)
library(dplyr)
library(ComplexHeatmap)
library(circlize)
library(igraph)
library(ggraph)
library(graphlayouts)
library(RColorBrewer)
library("viridis")
library(wesanderson)
#install.packages("ggsci")
library(ggsci)
library(reshape2)
library(readxl)
library(ggpubr)
name <- read.csv("C:/Users/chenliy/Desktop/PhD/porject I code/application2_spatial/ST_breast_cancer_data/Gene_expression_BC_BGR_VB.csv")
data <- readRDS("C:/Users/chenliy/Desktop/PhD/porject I code/application2_spatial/ST_breast_cancer_data/BC_u.rds")
coord <- read.csv("C:/Users/chenliy/Desktop/PhD/porject I code/application2_spatial/ST_breast_cancer_data/location_unscaled_BC.csv")
coord <- coord %>%
as.data.frame() %>%
mutate(x_scale = as.vector(scale(x)),
y_scale = as.vector(scale(y)))
colnames(coord)[c(4,5)] <- c("x_scale","y_scale")
####### external covariates
ex <- coord[,c(4:5)] %>% as.matrix()
#########################
###############
features <-  t(data) %>% as.matrix
#ex <- apply(ex,2,scale)
View(ex)
spatial_tra <- list(external = ex,
gene_expr = features)
save(spatial_tra , file = "data/spatial_tra.rda")
document()
library(devtools)
document()
?spatial_tra
install()
library(GraphR)
document()
load_all()
document()
data(“spatial_tra”)
data("spatial_tra")
?spatial_rda
?spatial_tra
document()
?si
document()
?si
data("si")
document()
document()
load_all()
data(si)
data("pan_gyane")
document()
setwd("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/data")
data <- read.csv("brca_agesi.csv")
View(data)
ex <- data[,c(3:5)]
features <- data[,c(7:196)]
si <- list(external = ex,
features = features)
save(si,"si.rda")
save(si,file = "si.rda")
data <- read.csv("brca_subtype.csv")
ex <- data[,c(1:3)]
colnames(ex) <- c("basal_like","her2_enriched","luminal_ab")
data <- read.csv("brca_subtype.csv")
ex <- data[,c(1:3)]
colnames(ex) <- c("basal_like","her2_enriched","luminal_ab")
features <- data[,c(4:193)]
pam50 <- list(external = ex,
features = features)
save(pam50,file = "pam50.rda")
data <- read.csv("pan_gy.csv")
ex <- data[,c(2:5)]
data <- read.csv("pan_gy.csv")
ex <- data[,c(2:5)]
features <- data[,c(6:194)]
pan_gynae <- list(external = ex,
features = features)
save(pan_gynae,file = "pan_gynae.rda")
gene_exp <- read.csv("Gene_expression_BC_BGR_VB.csv")
View(gene_exp)
coord <- read.csv("location_BC_scaled.csv")
coord <- read.csv("location_unscaled_BC.csv")
rownames(gene_exp) <- gene_exp$X
gene_exp <- gene_exp[,-1]
gene_exp <- t(gene_exp)
View(gene_exp)
name_gene <- strsplit(rownames(gene_exp),"x",simplify =TRUE)
library(stringr)
name_gene <- str_split(rownames(gene_exp),"x",simplify =TRUE)
View(name_gene)
name_gene[,1] <- substr(name_gene[,1],2,100)
View(name_gene)
View(coord)
colnames(name_gene) <- c("x","y")
gene_exp <- rbind(name_gene, gene_exp)
gene_exp <- cbind(name_gene, gene_exp)
View(gene_exp)
name_gene <- apply(name_gene, 2, as.numeric)
View(name_gene)
name_gene <- str_split(rownames(gene_exp),"x",simplify =TRUE)
gene_exp <- read.csv("Gene_expression_BC_BGR_VB.csv")
coord <- read.csv("location_unscaled_BC.csv")
rownames(gene_exp) <- gene_exp$X
gene_exp <- gene_exp[,-1]
gene_exp <- t(gene_exp)
library(stringr)
name_gene <- str_split(rownames(gene_exp),"x",simplify =TRUE)
name_gene[,1] <- substr(name_gene[,1],2,100)
colnames(name_gene) <- c("x","y")
name_gene <- apply(name_gene, 2, as.numeric)
gene_exp <- cbind(name_gene, gene_exp)
View(gene_exp)
gene_exp <- merge(gene_exp, coord)
View(gene_exp)
ex <- gene_exp[,c(1:2)]
features <- gene_exp[,c(3:102)]
View(gene_exp)
spatial <- list(external = ex,
features = features,
combined = gene_exp)
save(spatial,file = "spatial.rda")
load_all()
setwd("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/GraphR")
load_all()
data("pam50.rda")
data("pam50")
features <- apply(pam50$features,2,scale)
external <- pam50$external
external[c(1:5),]
system.time(res <- GraphR_est(
features,
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
set.seed(1)
library(GraphR)
data("pam50")
features <- apply(pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features,
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
set.seed(100)
library(GraphR)
data("pam50")
features <- apply(pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features,
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(4)
colnames(new_df) <- colnames(external)
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
pred <- GraphR_pred(new_df, res)
pred <- GraphR_pred(new_df, res)
head(pred)
system.time(pred <- GraphR_pred(new_df, res))
library(GraphR)
data("pam50")
features <- apply(pam50$features,2,scale) %>% as.matrix()
library(devtools)
library(Rcpp)
compileAttributes()
install()
library(dplyr)
install()
document()
document()
?GraphR-package
setwd("C:/Users/chenliy/Desktop/PhD/porject I code/code_package/GraphR/R")
pkgload::dev_help('GraphR-package')
document()
