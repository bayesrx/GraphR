library(GraphR)
remove.packages("GraphR")
install()
install()
library(devtools)
install()
library(GraphR)
?GraphR
?GraphR_visualization
document()
remove.packages(GraphR)
remove.packages("GraphR")
remove.packages("GraphR")
library(devtools)
document()
install()
set.seed(100)
library(GraphR)
library(dplyr)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
library(ggraph)
library(igraph)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
library(devtools)
check()
setwd("~/GitHub/GraphR")
use_package('dplyr')
# (Re-)build NAMESPACE
document()
# Reload the package: CTRL-L or
load_all()
use_package('reshape2')
document()
use_package('igraph')
document()
use_package('ggraph')
document()
document()
load_all()
library(GraphR)
library(GraphR)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
set.seed(100)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
remove.packages("GraphR")
library(devtools)
document()
checking
check
check()
load_all()
loaded_packages()
document()
load_all()
loaded_packages()
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
document()
load_all()
set.seed(100)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
library(GraphR)
set.seed(100)
library(GraphR)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
library(devtools)
install()
set.seed(100)
library(GraphR)
data("Pam50")
features <- as.matrix(apply(Pam50$features,2,scale))
features[c(1:5),c(1:5)]
external <- as.matrix(Pam50$external)
external[c(1:5),]
system.time(res <- GraphR_est(
features[,1:10],
external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
max_iter = 2000,
max_tol = 0.001
))
####### prediction
new_df <- diag(3)
colnames(new_df) <- colnames(external)
system.time(pred <- GraphR_pred(new_df, res))
head(pred)
####### visualization
new_vec <- c(1,0,0)
p1 <- GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
p1
GraphR_visualization(new_vec, graphR_est_res = res,
fdr_thre = 0.01, magnitude_thre = 0.4)
check()
devtools::check()
library(devtools)
document()
load_all()
check()
document()
?GraphR_est
set.seed(100)
library(magrittr)
data("Pam50")
features <- apply(Pam50$features,2,scale) %>% as.matrix()
dim(features)
features[c(1:5),c(1:5)]
external <- Pam50$external %>% as.matrix()
dim(external)
external[c(1:5),]
system.time(res <- GraphR_est(
features,
dis_external = external,
a_pi = 1,
b_pi = 4,
a_tau = 0.005,
b_tau = 0.005,
standardize_feature = FALSE,
standardize_external =FALSE,
max_iter = 2000,
max_tol = 0.001
))
document()
check()
document()
check()
library(devtools)
document()
document()
devtools::document()
devtools::check()
devtools::check()
?Reduce
devtools::check()
devtools::install()
remove.packages("GraphR")
devtools::install()
library(GraphR)
data("Pam50")
force(Pam50)
View(Pam50)
fea <- Pam50$features[,c(1:10)]
ex <- Pam50$external
res <- GraphR_est(fea,dis_external = ex)
pred <- GraphR_pred(as.data.frame(diag(3)),res)
View(pred)
View(res)
res[["beta"]]
res[["phi"]]
GraphR_visualization(c(1,0,0),res)
devtools::document()
devtools::check()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::check()
Rcpp::compileAttributes()
devtools::check()
Rcpp::compileAttributes()
devtools::check()
devtools::document()
Rcpp::compileAttributes()
devtools::check()
devtools::document()
devtools::check()
remove.packages("GraphR")
remotes::install_github("bayesrx/GraphR")
check()
devtools::check()
devtools::check()
devtools::check()
check()
devtools::check()
devtools::check()
setwd("~/GitHub/GraphR/R")
usethis::use_build_ignore("GraphR_Method_plot_final.png", escape = TRUE)
usethis::use_build_ignore("README.Rmd", escape = TRUE)
devtools::check()
setwd("~/GitHub/GraphR/R")
devtools::document()
rlang::last_error()
rlang::last_error()
devtools::document()
devtools::document()
devtools::check()
remove.packages("GraphR")
remotes::install_github("bayesrx/GraphR")
remotes::install_github("bayesrx/GraphR")
devtools::clean_dll()
devtools::clean_dll()
devtools::install_github("bayesrx/GraphR")
data("Si")
feature <- Si$features
cont_ext <- Si$external
dis_ext <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
feature <- feature[,c(1:10)]
GraphR_est(features = feature,
cont_external = cont_ext,standardize_feature = TRUE, standardize_external = TRUE)
library(GraphR)
data("Si")
feature <- Si$features
cont_ext <- Si$external
dis_ext <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
feature <- feature[,c(1:10)]
GraphR_est(features = feature,
cont_external = cont_ext,standardize_feature = TRUE, standardize_external = TRUE)
GraphR_est(features = feature,
dis_external = dis_ext ,standardize_feature = TRUE, standardize_external = TRUE)
GraphR_est(features = feature)
GraphR_est(features = feature,
dis_external = dis_ext,
cont_external = cont_ext, standardize_external = TRUE)
GraphR_est(features = feature,
cont_external = cont_ext, standardize_external = TRUE)
data("Si")
feature <- Si$features
cont_ext <- Si$external
dis_ext <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
features <- features[,c(1:10)]
data("Si")
features <- Si$features
cont_external <- Si$external
dis_external <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
features <- features[,c(1:10)]
################################################################################
p <- ncol(features)
n <- nrow(features)
features_colid <- colnames(features) ## gene_id
if (is.null(features_colid)){
features_colid <- paste0("feature",c(1:p),recycle0 = TRUE)
}
if (standardize_feature){
features <- apply(features,2,scale)
}
features <- as.matrix(features)
#external_colid <- c(colnames(cont_external),colnames(dis_external))
if ((is.null(cont_external)) & (is.null(dis_external))){
stop("External covariates are required")
}
standardize_external <- TRUE
if (standardize_external){
if (is.null(cont_external)) {
stop("Continuous external covariates are required")
} else{
cont_external <- apply(cont_external,2,scale) %>% as.matrix()
}
}
library(dplyr)
if (standardize_external){
if (is.null(cont_external)) {
stop("Continuous external covariates are required")
} else{
cont_external <- apply(cont_external,2,scale) %>% as.matrix()
}
}
data("Si")
features <- Si$features
cont_external <- Si$external
dis_external <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
features <- features[,c(1:10)]
standardize_external <- TRUE
standardize_feature <- TRUE
#GraphR_est(features = feature,
#           cont_external = cont_ext, standardize_external = TRUE)
################################################################################
p <- ncol(features)
n <- nrow(features)
features_colid <- colnames(features) ## gene_id
if (is.null(features_colid)){
features_colid <- paste0("feature",c(1:p),recycle0 = TRUE)
}
if (standardize_feature){
features <- apply(features,2,scale)
}
features <- as.matrix(features)
external_colid <- c(colnames(cont_external),colnames(dis_external))
devtools::install_github("bayesrx/GraphR")
devtools::install_github("bayesrx/GraphR")
devtools::install_github("bayesrx/GraphR")
library(GraphR)
library(dplyr)
data("Si")
features <- Si$features
cont_external <- Si$external
dis_external <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
features <- features[,c(1:10)]
standardize_external <- TRUE
standardize_feature <- TRUE
GraphR_est(features,
dis_external,
cont_external, standardize_external = TRUE)
devtools::install_github("bayesrx/GraphR")
devtools::install_github("bayesrx/GraphR")
library(GraphR)
library(dplyr)
data("Si")
features <- Si$features
cont_external <- Si$external
dis_external <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
features <- features[,c(1:10)]
standardize_external <- TRUE
standardize_feature <- TRUE
GraphR_est(features,
dis_external,
cont_external, standardize_external = TRUE)
################################################################################
p <- ncol(features)
n <- nrow(features)
features_colid <- colnames(features) ## gene_id
if (is.null(features_colid)){
features_colid <- paste0("feature",c(1:p),recycle0 = TRUE)
}
if (standardize_feature){
features <- apply(features,2,scale)
}
features <- as.matrix(features)
#external_colid <- c(colnames(cont_external),colnames(dis_external))
if (!is.null(cont_external)){
cont_ex_name <- colnames(cont_external)
if (standardize_external){
cont_external <- apply(cont_external,2,scale)
}
cont_external <- as.matrix(cont_external)
if (is.null(cont_ex_name)){
q_cont <- ncol(cont_external)
cont_ex_name <- paste0("cont_external",c(1:q_cont),recycle0 = TRUE)
}
if (!is.null(dis_external)){
dis_ex_name <- colnames(dis_external)
dis_external <- as.matrix(dis_external)
if (is.null(dis_ex_name)){
q_dis <- ncol(dis_external)
dis_ex_name <- paste0("dis_external",c(1:q_dis),recycle0 = TRUE)
}
external <- cbind(cont_external,dis_external)
external_colid <- c(cont_ex_name,dis_ex_name)
} else{
external <- cont_external
external_colid  <- cont_ex_name
}
} else{
if (!is.null(dis_external)){
dis_ex_name <- colnames(cont_external)
dis_external <- as.matrix(dis_external)
if (is.null(dis_ex_name)){
q_dis <- ncol(dis_external)
dis_ex_name <- paste0("dis_external",c(1:q_dis),recycle0 = TRUE)
}
external <- dis_external
external_colid  <- dis_ex_name
} else{
stop("External covariates are required")
}
}
external_colid
devtools::install_github("bayesrx/GraphR")
library(GraphR)
library(dplyr)
data("Si")
features <- Si$features
cont_external <- Si$external
dis_external <- matrix(sample(c(0,1), 1232,replace = TRUE),nrow = 616)
features <- features[,c(1:10)]
standardize_external <- TRUE
standardize_feature <- TRUE
GraphR_est(features,
dis_external,
cont_external, standardize_external = TRUE)
GraphR_est(features,cont_external, dis_external, standardize_external = TRUE)
